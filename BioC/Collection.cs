//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1092.0 using the following command:
// xscgen --netCore --nullable --namespace=BioC --collectionType=System.Collections.Generic.List`1 --complexTypesForCollections=false --compactTypeNames --nullableReferenceAttributes --separateFiles --unionCommonType -o .. BioC.xsd
namespace BioC
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Diagnostics;
    using System.Diagnostics.CodeAnalysis;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1092.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("collection", Namespace="", AnonymousType=true)]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlRootAttribute("collection", Namespace="")]
    public partial class Collection
    {
        
        [RequiredAttribute()]
        [XmlElementAttribute("source")]
        public string Source { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("date")]
        public string Date { get; set; }
        
        [RequiredAttribute()]
        [XmlElementAttribute("key")]
        public string Key { get; set; }
        
        [XmlIgnoreAttribute()]
        private List<Infon> _infon;
        
        [XmlElementAttribute("infon")]
        public List<Infon> Infon
        {
            get
            {
                return _infon;
            }
            private set
            {
                _infon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Infon collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public bool InfonSpecified
        {
            get
            {
                return (this.Infon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Collection" /> class.</para>
        /// </summary>
        public Collection()
        {
            this._infon = new List<Infon>();
            this._document = new List<Document>();
        }
        
        [XmlIgnoreAttribute()]
        private List<Document> _document;
        
        [RequiredAttribute()]
        [XmlElementAttribute("document")]
        public List<Document> Document
        {
            get
            {
                return _document;
            }
            private set
            {
                _document = value;
            }
        }
    }
}
